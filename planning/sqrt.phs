"../std/lang.phs"    require use
"../std/number.phs"  require $number =

# Average
(: + 2 / ) $avg =

# Absolute value
(: true ) (: ) $abs fun
(: 0 < ) (: -1 * ) $abs fun

# Square route via newton-rhapson method
#   Please instead use sqrt function defined in std/math.phs
((number.Float):
    dup type $T =
	((T T) (T) rec: # Tail-recursive helper
        ( $x $guess ) =

        # Do we have an acceptable margin of error?
        (: guess guess * x - abs x / T number.limits.epsilon <= ) $good_enough =

        # We can improve the value by averaging with quotient
        (: x x guess / guess avg iter ) $improve =

        # Improve value until it's good enough
        (: 1 ) (: improve ) $cond fun
        (: good_enough ) (: guess ) $cond fun
        cond
	) $iter =

    # Start calculating with first guess being 1
    1.0 T cast iter
) $sqrt =

# Export square route function
( F64 ) (: sqrt ) "sqrt" export
