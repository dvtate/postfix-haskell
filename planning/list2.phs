"../std/lang.phs" require use
"../std/list.phs" require $list =
"../std/io.phs" require $io =

# Import Math.random from javascript
Unit (F64) Arrow ( "js" "Math.random" ) import $random =

# Type for lists of doubles
F64 list.List $DoubleList =

( 0.0 ( 1.0 ( 2.0 ( 3.0
    () DoubleList.Nil make)
    DoubleList.Node make )
    DoubleList.Node make )
    DoubleList.Node make )
    DoubleList.Node make
$ll =

ll 2 DoubleList.take :data
ll 2 DoubleList.drop :data
ll DoubleList.length :data

ll 1 DoubleList.at :data
ll 2 DoubleList.at :data
#ll 6 DoubleList.at :data
ll 1 DoubleList.at_maybe :data
ll 2 DoubleList.at_maybe :data
ll 6 DoubleList.at_maybe :data

# Append n randomly generated nodes to given list
((I32 DoubleList) (DoubleList) rec:
    ( $ll $n ) =
    (: 1 ) (: ll ) $branch fun
    (: n 0 > ) (:
        ( random ll ) DoubleList.Node make
        n 1 -
        mk_list
    ) $branch fun
    branch
) $mk_list =

(Unit io.IO I32) (:
    # Input: number of nodes to use in list
    $n =

    # A list with n randomly generated elements
    () DoubleList.Nil make n mk_list $list =

    # Print the elements in the list
    list swap (: io.print ) DoubleList.foldl

    # Give new list containing the triples of given list
    (: (: 3.0 * ) DoubleList.map ) $triple =

    # Calculate the sum of given list
    (: 0.0 (: + ) DoubleList.foldr ) $sum =

    # Return the sum of the tripled elements of generated list
    list triple sum
) "test" export
