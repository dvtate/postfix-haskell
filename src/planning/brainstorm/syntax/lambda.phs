
# Good
{ a b + } { $a  $b } lambda $add =

# Bad - and will only complain when you try to call it
{+} {} lambda $add =

# Arguments passed same way, important alternative to currying
1 2 add

# Can use lambdas in fun/branches
{ 1 } {+} $branch fun                   # with macros
{ b 0 < } { $a  $b } lam                # with lambdas
{ a b - } { $a  $b } lam $branch fun


# This is weirder but maybe after this {} = is called
# it sets a temporary number of inputs and outputs to bind
# and the user isn't supposed to pull any after that...
# Not a good solution but imo most elegant
{{ $a  $b } =
    a b +
}

# These are alternative to inline type info...
{+} {{I32 I32} {I32}} ::  $add =

{ :: {{Any Any} {Any}}
    +
} $add =