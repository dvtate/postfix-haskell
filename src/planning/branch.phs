"./stdlib/prelude.phs" require use
"./stdlib/math.phs" require use

-1 $fizz =
-2 $buzz =
fizz buzz + $fizzbuzz =

# TODO fix the && operator

(: 1 ) (: ) $fb fun
(: 3 % 0 == ) (: pop fizz ) $fb fun
(: 5 % 0 == ) (: pop buzz ) $fb fun
(: $n = n 3 % 0 == n 5 % 0 == * ) (: pop fizzbuzz ) $fb fun
# ( I32 ) (: fb ) "fb" export

Unit class $Cuck =
(:
    ( $v0 $v1 $v2 $v3 ) =
    0 v0 ( Cuck I32 I32 ) ( Cuck ) Arrow "i32.store" _asm
    4 v1 ( Cuck I32 I32 ) ( Cuck ) Arrow "i32.store" _asm
    8 v2 ( Cuck I32 I32 ) ( Cuck ) Arrow "i32.store" _asm
    12 v3 ( Cuck I32 F32 ) ( Cuck ) Arrow "f32.store" _asm
) $save =

(:
    0 ( I32 ) ( I32 ) Arrow "i32.load" _asm
    4 ( I32 ) ( I32 ) Arrow "i32.load" _asm
    8 ( I32 ) ( I32 ) Arrow "i32.load" _asm
    12 ( I32 ) ( F32 ) Arrow "F32.load" _asm
) $load =

( Cuck I32 ) (:
    $v =
    load
    ( $n $a $b $c ) =
    (: true ) (: 1 2 3 1.0f ) $branch fun
    (: v 1 == ) (: 1 2 3 1.0f ) $branch fun
    (: v 2 == ) (: 1 2 3 1.0f ) $branch fun
    (: v 3 == ) (: 1 2 3 1.0f ) $branch fun
    (: v 4 == ) (: 1 2 3 1.0f ) $branch fun
    branch
    #:stack
    save
) "test" export